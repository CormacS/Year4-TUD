message3 = "XQKP IZ IMWEB LK AUVZCXKW PHL VPE RIKD ASOZZSBZI TOIE ESTDXEJWXM CPS-3. PHPA TA DPW NEZCWB YN S OIE-GPIB KGIPLBTBSWF, WNKUJ WGV KGEPV TA YVW KF APP NSDW NETITVSVY BIUIWQCBK (KUA WQIX QFETPIW 64). QD'A HNOIIMTI BGK LHBP NYZ EA TV IQNOKL PHL NTVKTVACPATWX, JMP I HU SWZQFC FVZ 'YW KESND.' PB'D VYB LDAA BSM XMODAZP QCXKLEOUA LZOV'L WNF OZWN, QL'O TOIE EO LGJ'T YMLTVG FAEKWYM. GPWJ WL AEIBBWZ TOQD XBWUASZ JLKU QF 2006, ET SWZSOL SO IMEP EYCDZ BL VPMNQFC A UMH PKAZ BUUKEQYV KKOU. BSM CPSBATQWG (GPAYH PA CMKTDU PHZE WP BZA MK4 IYL WL5 XWMPTJ), EKAMJDLZ TVMZWWSPVR XBMKOUYM QZYU FAW AGAMC WXYRFXEIXIDUSPA. HM NQVJ'T RVZE RWO HOUO EPO DSNIVCD ARI-2NWRPIYBC EGQLK ZPUKQF OEJCCM. LCL ET'Z 2012, IYL CPS-512 ES ZBTTVTGKKPVR OYWV.AVLV HWBAW, JOUM ZN DPW OHH-3 KLVNQVWTLA TA CQYJIMQNIXBDUBLBEMB. AGIE HZP NKALAR, ICE VYB GNDLZD WP USCNPBFLO NSOTLZ.DWWM SNE ZULTVMJ EN OICLGIJA, BBB YWD WJZEYA ZN WIYJIACOMCUSHLLZ. HPOV KDA-3 PA LVXWMJCLL, T'U QWAJG AW CMMWEIEULEPKB, MJLLAD BRM AIPYWGMWMFPS HZP KBQLECHT EW DPWERHXATSKSPIVV, AMYXDA SAQNS GQLD TOM EZSMV WNK BCCO AZW-512.AA TPICB XKR H ESQVM. A ZOU'B EPSVC JIZB TA QWAJG AW LVXWMJCL'VZ IGIJZ; 'I APTVU QL'O GVQYO DW HECR WYM. KVV KF APP NSDWNETITVSVY, E DVV'E ZOIDHY OIGM K NSROYQEM. YN UKUYAP Q GIFPSRMTV DW OEN, ICE BRIL'O OBB ZN ZMJOOUIW XBQVA, NVB QWB AGIEVJUMMBARE YMLAYV. SJD DPTTO Q DEKL AZUO UGNE APLV YBZARZ, QEPSVC WNF EZCVL TA ORIJ. EOTD, IAFJP BRMJA'S VVP ZOIKKN UQDBCPGQLK KSWYAW OKLQY. AUMAJ IZV'E REAL W HHAS NEVUPIVV, TB'CBZA LHZRM-LTGYK JQAPOZ LDRLMQQCP SJD H UPKRIFEST BZ BEZF ETPVEW K PSOH MCYKDQGJ. I APTVU BZA WVZWL KKLQASTJ VOMVO ASICOO-JDKCR KTXRMJ, WNK QQ VSAL YHVWDMC ACAIU, EP'TV OWP OUM." 
keyword = "KISWAHILI"
translation = ''
alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

message3Length = len(message3)

longKey = keyword
longKeyLength = len(longKey)

#Making the key as long as the message
while longKeyLength < message3Length:
    longKey = longKey + keyword
    longKeyLength = len(longKey)

key = 0

for letter in message3:
    if letter in alphabet:
        position = alphabet.find(letter)

        #Taking character from keyword
        keyCharacter = longKey[key]
        keyCharacterPosition = alphabet.find(keyCharacter)
        key = key + 1

        #Getting the position of the correct letter
        newPosition = position - keyCharacterPosition
        if newPosition > 25:
            newPosition = newPosition + 25
        newCharacter = alphabet[newPosition]
        translation = translation + newCharacter
    else:
        translation = translation + letter

print(translation)


